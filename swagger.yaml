openapi: 3.0.0
info:
  description: |
    This is the official Crabber REST API. Developer keys can be obtained at /developer on Crabber.
  version: "1.0.0"
  title: Crabber
  termsOfService: 'https://crabber.net/static/legal/tos.txt'
  contact:
    email: crabberwebsite@gmail.com
  license:
    name: GNU General Public License v2.0
    url: 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/jakeledoux/Crabber/1.0.0
  - url: 'https://crabber.net/api/v1'
tags:
  - name: Crabs
  - name: Molts
  - name: Crabtags
  - name: Timeline
paths:
  /crabs/{crab_id}:
    get:
      tags:
        - Crabs
      summary: Get Crab by ID
      parameters:
        - name: crab_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Crab'
        '404':
          description: Crab not found
  /crabs/{crab_id}/bio/:
    get:
      tags:
        - Crabs
      summary: Get a Crab's bio
      parameters:
        - name: crab_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ExtendedCrab'
        '404':
          description: Crab not found
  /crabs/{crab_id}/followers/:
    get:
      tags:
        - Crabs
      summary: Get a Crab's followers
      parameters:
        - name: crab_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of Crabs to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The starting index to use (for pagination)
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CrabList'
        '404':
          description: Crab not found
  /crabs/{crab_id}/following/:
    get:
      tags:
        - Crabs
      summary: Get the users that Crab is following.
      parameters:
        - name: crab_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of Crabs to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The starting index to use (for pagination)
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/CrabList'
        '404':
          description: Crab not found
  /crabs/{crab_id}/molts/:
    get:
      tags:
        - Crabs
      summary: Get a Crab's authored Molts.
      parameters:
        - name: crab_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of Molts to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The starting index to use (for pagination)
        - in: query
          name: since
          schema:
            type: integer
          description: The timestamp before which no Molts will be returned.
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MoltList'
        '404':
          description: Crab not found
  /crabs/username/{crab_username}:
    get:
      tags:
        - Crabs
      summary: Get Crab by Username
      parameters:
        - name: crab_username
          in: path
          required: true
          explode: true
          schema:
            type: string
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Crab'
        '404':
          description: Crab not found
  /crabs/{crab_id}/follow/:
    post:
      tags:
        - Crabs
      summary: Follow a Crab
      parameters:
        - name: crab_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Crab not found
  /crabs/{crab_id}/unfollow/:
    post:
      tags:
        - Crabs
      summary: Unfollow a Crab
      parameters:
        - name: crab_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Crab not found
  /molts/:
    post:
      tags:
        - Molts
      summary: Publish a Molt
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The body text of the Molt to publish.
              required:
                - content
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Molt'
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Molt not found
  /molts/{molt_id}:
    get:
      tags:
        - Molts
      summary: Get Molt by ID
      parameters:
        - name: molt_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Molt'
        '404':
          description: Molt not found
    delete:
      tags:
        - Molts
      summary: Delete a Molt
      parameters:
        - name: molt_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Molt not found
  /molts/{molt_id}/replies/:
    get:
      tags:
        - Molts
      summary: Get replies to a Molt.
      parameters:
        - name: molt_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of Molts to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The starting index to use (for pagination)
        - in: query
          name: since
          schema:
            type: integer
          description: The timestamp before which no Molts will be returned.
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MoltList'
        '404':
          description: Molt not found
  /molts/{molt_id}/reply/:
    post:
      tags:
        - Molts
      summary: Publish reply to a Molt
      parameters:
        - name: molt_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The body text of the Molt to publish.
              required:
                - content
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Molt'
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Molt not found
  /molts/mentioning/{crab_username}}/:
    get:
      tags:
        - Molts
      summary: Get Molts that mention a specific Crab.
      parameters:
        - name: crab_username
          in: path
          required: true
          explode: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of Molts to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The starting index to use (for pagination)
        - in: query
          name: since
          schema:
            type: integer
          description: The timestamp before which no Molts will be returned.
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MoltList'
        '404':
          description: Crab not found
  /molts/{molt_id}/like/:
    post:
      tags:
        - Molts
      summary: Like a Molt
      parameters:
        - name: molt_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Molt not found
  /molts/{molt_id}/unlike/:
    post:
      tags:
        - Molts
      summary: Unlike a Molt
      parameters:
        - name: molt_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Molt not found
  /molts/{molt_id}/remolt/:
    post:
      tags:
        - Molts
      summary: Remolt a Molt
      parameters:
        - name: molt_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Molt not found
    delete:
      tags:
        - Molts
      summary: Delete the Remolt of a Molt
      parameters:
        - name: molt_id
          in: path
          required: true
          explode: true
          schema:
            type: integer
        - in: query
          name: api_key
          required: true
          schema:
            type: string
        - in: query
          name: access_token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: user error
        '401':
          description: requires authentication
        '404':
          description: Molt not found
  /timeline/{crab_username}/:
    get:
      tags:
        - Timeline
      summary: Get a Crab's timeline
      parameters:
        - name: crab_username
          in: path
          required: true
          explode: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of Molts to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The starting index to use (for pagination)
        - in: query
          name: since
          schema:
            type: integer
          description: The timestamp before which no Molts will be returned.
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MoltList'
        '404':
          description: Crab not found
  /crabtag/{crabtag}}/:
    get:
      tags:
        - Crabtag
      summary: Get Molts that use a specific Crabtag.
      parameters:
        - name: crabtag
          in: path
          required: true
          explode: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
          description: The number of Molts to return.
        - in: query
          name: offset
          schema:
            type: integer
          description: The starting index to use (for pagination)
        - in: query
          name: since
          schema:
            type: integer
          description: The timestamp before which no Molts will be returned.
        - in: query
          name: api_key
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/MoltList'
        '404':
          description: Crab not found
components:
  schemas:
    Crab:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
          example: jake
        verified:
          type: boolean
          example: true
        display_name:
          type: string
          example: Jake L.
        avatar:
          type: string
          example: /static/img/user_uploads/jake-avatar.jpg
        followers:
          type: integer
          example: 31
        following:
          type: integer
          example: 11
        register_time:
          type: integer
    ExtendedCrab:
      type: object
      description: Entirely self-described, user-submitted data.
      properties:
        id:
          type: integer
        username:
          type: string
          example: jake
        bio:
          type: object
          properties:
            age:
              type: string
              nullable: true
            description:
              type: string
              nullable: true
            jam:
              type: string
              nullable: true
            location:
              type: string
              nullable: true
            obsession:
              type: string
              nullable: true
            pronouns:
              type: string
              nullable: true
            quote:
              type: string
              nullable: true
        verified:
          type: boolean
          example: true
        display_name:
          type: string
          example: Jake L.
        avatar:
          type: string
          example: /static/img/user_uploads/jake-avatar.jpg
        followers:
          type: integer
          example: 31
        following:
          type: integer
          example: 11
        register_time:
          type: integer
    Molt:
      type: object
      properties:
        id:
          type: integer
        timestamp:
          type: integer
        author:
          $ref: '#/components/schemas/Crab'
        content:
          type: string
          example: "twitter: old, made in 2006. mascot is a dumb bird. pretty lame.\r\n\r\ncrabber: brand new, came out in 2020. has awesome crab logo. really cool."
        image:
          description: Link to image if provided.
          nullable: true
          type: string
        replying_to:
          description: The ID of the Molt this is replying to, if necessary
          type: integer
          nullable: true
        mentions:
          description: Array of usernames mentioned.
          type: array
          items:
            type: string
        crabtags:
          description: Array of crabtags used.
          type: array
          items:
            type: string
    CrabList:
      type: object
      properties:
        crabs:
          type: array
          items:
            $ref: '#/components/schemas/Crab'
        count:
          description: The number of Crabs in this response.
          type: integer
        limit:
          description: The effective limit of Crabs per request.
          type: integer
        offset:
          description: The requested offset for this request.
          type: integer
        total:
          description: The total number of Crabs for this query.
          type: integer
    MoltList:
      type: object
      properties:
        crabs:
          type: array
          items:
            $ref: '#/components/schemas/Molt'
        count:
          description: The number of Molts in this response.
          type: integer
        limit:
          description: The effective limit of Molts per request.
          type: integer
        offset:
          description: The requested offset for this request.
          type: integer
        total:
          description: The total number of Molts for this query.
          type: integer
